%%validation: epoch 10: processing batch  33 of  33 ... 0.14 s (547.9 images/s) err 18.6 err5 1.4
function net = InitializeTextonNetwork( input_args )

f=1/100 ;
net.layers = {} ;
%Input size 64,64
net.layers{end+1} = struct('type', 'conv', ...
                           'filters',f*randn(3,3,1,32, 'single'),...
                           'biases', zeros(1,32,'single'), ...
                           'stride', 1, ...     					   
                           'pad', 0) ;
%Input size 62,62,32
net.layers{end+1} = struct('type', 'relu') 
%Input size 62,62,32
net.layers{end+1} = struct('type', 'conv', ...
                           'filters',f*randn(3,3,32,32, 'single'),...
                           'biases', zeros(1,32,'single'), ...
                           'stride', 1, ...     					   
                           'pad', 0) ;
%Input size 60,60,32                      
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;
%Input size 30,30,32                       
net.layers{end+1} = struct('type', 'conv', ...
                           'filters',f*randn(3,3,32,64, 'single'),...
                           'biases', zeros(1,64,'single'), ...
                           'stride', 1, ...     					   
                           'pad', 0) ;
%Input size 28,28,64                        
net.layers{end+1} = struct('type', 'relu') 
%Input size 28,28,64   
net.layers{end+1} = struct('type', 'conv', ...
                           'filters',f*randn(3,3,64,64, 'single'),...
                           'biases', zeros(1,64,'single'), ...
                           'stride', 1, ...     					   
                           'pad', 0) ;
%Input size 26,26,64                          
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;

%Input size 13,13,64                          
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;   

%Input size 6,6,64                          
net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(3,3,64,128, 'single'),...
                           'biases', zeros(1,128,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
%Input size 4,4,128                        
net.layers{end+1} = struct('type', 'relu') 
%Input size 4,4,128
net.layers{end+1} = struct('type', 'conv', ...Te
                           'filters', f*randn(3,3,128,128, 'single'),...
                           'biases', zeros(1,128,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
%Input size 2,2,128                       
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;   
%Input size 1,1,128                                              
net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(1,1,128,25, 'single'),...
                           'biases', zeros(1,25,'single'), ...
                           'stride', 1, ...
                           'pad', 0) ;
%                        
% net.layers{end+1} = struct('type', 'pool', ...
%                            'method', 'max', ...
%                            'pool', [2 2], ...
%                            'stride', 2, ...
%                            'pad', 0) ;
%                                      
% net.layers{end+1} = struct('type', 'conv', ...
%                            'filters', f*randn(2,2,128,25, 'single'),...
%                            'biases', zeros(1,25,'single'), ...
%                            'stride', 1, ...
%                            'pad', 0) ;

net.layers{end+1} = struct('type', 'softmaxloss') ;


end
